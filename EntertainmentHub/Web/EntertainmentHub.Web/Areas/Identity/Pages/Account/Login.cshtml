@page
@model LoginModel
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    ViewData["Title"] = "Log in";
}

<link rel="stylesheet" href="~/css/material-design-iconic-font.min.css" />
<link rel="stylesheet" type="text/css" href="~/css/reg-log-style.css" />

<div class="container">
    <div class="signup-content">
        <div class="form-group">
            <ul class="back-to-home">
                <li class="form-submit submit"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
            </ul>
        </div>

        <form asp-route-returnUrl="@Model.ReturnUrl" method="post" id="signup-form" class="signup-form">
            <h2>@ViewData["Title"]</h2>
            <p class="desc"><span>Sign in, dear friend :]</span></p>

            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Input.Username" type="text" class="form-input" placeholder="Username..." />
                <span asp-validation-for="Input.Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="Input.Password" type="password" class="form-input" id="password" placeholder="Password..." />
                <span toggle="#password" class="zmdi zmdi-eye field-icon toggle-password"></span>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input class="agree-term" asp-for="Input.RememberMe" />
                @Html.DisplayNameFor(m => m.Input.RememberMe)

                <label class="checkbox" asp-for="Input.RememberMe">
                    <span>
                    </span>
                </label>
            </div>
            <input type="hidden" asp-for="Input.ReCaptchaValue" id="ReCaptchaValue" />

            <div class="form-group">
                <input type="submit" name="submit" id="submit" class="form-submit submit" value="Login" />
                <a asp-area="Identity" asp-page="/Account/Register" asp-for"" class="submit-link submit">Register</a>
            </div>
            <br />
            <div class="form-group">
                <p class="form-input">
                    <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                </p>
                <p class="form-input">
                    <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                </p>
                <p class="form-input">
                    <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                </p>
            </div>
        </form>
    </div>

    @*<div class="row">
    <div class="col-md-6 col-md-offset-2">
    <section>
    <h4>Use another service to log in.</h4>
    <hr />
    @{
    if ((Model.ExternalLogins?.Count ?? 0) == 0)
    {
    <div>
    <p>
    There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
    for details on setting up this ASP.NET application to support logging in via external services.
    </p>
    </div>
    }
    else
    {
    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
    <div>
    <p>
    @foreach (var provider in Model.ExternalLogins)
    {
    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
    }
    </p>
    </div>
    </form>
    }
    }
    </section>
    </div>
    </div>*@
</div>

<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script type="text/javascript" src="~/js/main.js"></script>

@section Scripts{
    <script src="https://www.google.com/recaptcha/api.js?render=@this.Configuration["GoogleReCaptcha:Key"]"></script>

    <script>
        // Onload
        grecaptcha.ready(function () {
            grecaptcha.execute('@this.Configuration["GoogleReCaptcha:Key"]', { action: 'homepage' })
            .then(function (token) {
                document.getElementById('ReCaptchaValue').value = token;
            });
        });

        //Every 90 Seconds(this js method works in milliseconds)
        setInterval(function () {
            grecaptcha.ready(function () {
                grecaptcha.execute('@this.Configuration["GoogleReCaptcha:Key"]', { action: 'homepage' })
                .then(function (token) {
                    document.getElementById('ReCaptchaValue').value = token;
                });
            });
        }, 90000);
    </script>
}